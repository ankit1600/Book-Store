{"ast":null,"code":"var _jsxFileName = \"/home/ankit/github/react_book_menu/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Book_manu from \"./component/basics/BookStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [myStyle, setMyStyle] = useState({\n    color: \"red\",\n    backgroundColor: \"white\"\n  });\n  const [btnText, setbtnText] = useState(\"Enable Dark Mode\");\n  const toggleStyle = () => {\n    if (myStyle.color === \"red\") {\n      setMyStyle({\n        color: \"red\",\n        backgroundColor: \"black\"\n      });\n      setbtnText(\"Enable light Mode\");\n    } else {\n      setMyStyle({\n        color: \"green\",\n        backgroundColor: \"white\"\n      });\n      setbtnText(\"Enable Dark  Mode\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: myStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleStyle,\n      children: btnText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Book_manu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"mxP39KcUTYeNqJS4vkuR0Cav6ss=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Book_manu","jsxDEV","_jsxDEV","App","_s","myStyle","setMyStyle","color","backgroundColor","btnText","setbtnText","toggleStyle","style","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ankit/github/react_book_menu/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Book_manu from \"./component/basics/BookStore\";\n\nconst App = () => {\n  const [myStyle, setMyStyle] = useState({\n    color: \"red\",\n    backgroundColor: \"white\",\n  });\n\n  const [btnText, setbtnText] = useState(\"Enable Dark Mode\");\n  const toggleStyle = () => {\n    if (myStyle.color === \"red\") {\n      setMyStyle({\n        color: \"red\",\n        backgroundColor: \"black\",\n      });\n      setbtnText(\"Enable light Mode\");\n    } else {\n      setMyStyle({\n        color: \"green\",\n        backgroundColor: \"white\",\n      });\n      setbtnText(\"Enable Dark  Mode\");\n    }\n  };\n\n  return (\n    <div style={myStyle}>\n      <button onClick={toggleStyle}>{btnText}</button>\n      <Book_manu />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC;IACrCQ,KAAK,EAAE,KAAK;IACZC,eAAe,EAAE;EACnB,CAAC,CAAC;EAEF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,kBAAkB,CAAC;EAC1D,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIN,OAAO,CAACE,KAAK,KAAK,KAAK,EAAE;MAC3BD,UAAU,CAAC;QACTC,KAAK,EAAE,KAAK;QACZC,eAAe,EAAE;MACnB,CAAC,CAAC;MACFE,UAAU,CAAC,mBAAmB,CAAC;IACjC,CAAC,MAAM;MACLJ,UAAU,CAAC;QACTC,KAAK,EAAE,OAAO;QACdC,eAAe,EAAE;MACnB,CAAC,CAAC;MACFE,UAAU,CAAC,mBAAmB,CAAC;IACjC;EACF,CAAC;EAED,oBACER,OAAA;IAAKU,KAAK,EAAEP,OAAQ;IAAAQ,QAAA,gBAClBX,OAAA;MAAQY,OAAO,EAAEH,WAAY;MAAAE,QAAA,EAAEJ;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAChDhB,OAAA,CAACF,SAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACd,EAAA,CA7BID,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA+BT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}