{"ast":null,"code":"var _jsxFileName = \"/home/ankit/github/react_book_menu/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Book_manu from \"./component/basics/BookStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [myStyle, setMyStyle] = useState({\n    color: \"red\",\n    backgroundColor: \"white\"\n  });\n  const toggleStyle = () => {\n    if (myStyle.backgroundColor === \"white\") {\n      setMyStyle({\n        color: \"blue\",\n        backgroundColor: \"black\"\n      });\n    } else {\n      setMyStyle({\n        color: \"red\",\n        backgroundColor: \"white\"\n      });\n    }\n  };\n  const uniqueList = [...new Set(Menu.map(currElem => {\n    return currElem.category;\n  })), \"All\"];\n  console.log(uniqueList);\n  const [menuData, setMenuData] = React.useState(Menu); //always add first.. it's a hook\n  const [menuList, setMenuList] = React.useState(uniqueList);\n  const filterItem = category => {\n    if (category === \"All\") {\n      setMenuData(Menu);\n      return;\n    }\n    const updatedList = Menu.filter(curElem => {\n      return curElem.category === category;\n    });\n    setMenuData(updatedList);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: myStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"switch\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onClick: toggleStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"slider round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  };\n};\n_s(App, \"xVx1jac6/GoXZ671oaOpcErBJDQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Book_manu","jsxDEV","_jsxDEV","App","_s","myStyle","setMyStyle","color","backgroundColor","toggleStyle","uniqueList","Set","Menu","map","currElem","category","console","log","menuData","setMenuData","menuList","setMenuList","filterItem","updatedList","filter","curElem","style","children","class","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ankit/github/react_book_menu/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Book_manu from \"./component/basics/BookStore\";\n\nconst App = () => {\n  const [myStyle, setMyStyle] = useState({\n    color: \"red\",\n    backgroundColor: \"white\",\n  });\n\n  const toggleStyle = () => {\n    if (myStyle.backgroundColor === \"white\") {\n      setMyStyle({\n        color: \"blue\",\n        backgroundColor: \"black\",\n      });\n    } else {\n      setMyStyle({\n        color: \"red\",\n        backgroundColor: \"white\",\n      });\n    }\n  };\n  const uniqueList = [\n    ...new Set(\n      Menu.map((currElem) => {\n        return currElem.category;\n      })\n    ),\n    \"All\",\n  ];\n\n  console.log(uniqueList);\n\n  const [menuData, setMenuData] = React.useState(Menu); //always add first.. it's a hook\n  const [menuList, setMenuList] = React.useState(uniqueList);\n  const filterItem = (category) => {\n    if (category === \"All\") {\n      setMenuData(Menu);\n      return;\n    }\n\n    const updatedList = Menu.filter((curElem) => {\n      return curElem.category === category;\n    });\n    setMenuData(updatedList);\n\n    return (\n      <div style={myStyle}>\n        <label class=\"switch\">\n          <input type=\"checkbox\" onClick={toggleStyle} />\n          <span class=\"slider round\"></span>\n        </label>{\" \"}\n        {/* <Navbar filterItem={filterItem} menuList={menuList} />\n        <MenuCard menuData={menuData} />\n        <Book_manu /> */}\n      </div>\n    );\n  };\n};\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC;IACrCQ,KAAK,EAAE,KAAK;IACZC,eAAe,EAAE;EACnB,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIJ,OAAO,CAACG,eAAe,KAAK,OAAO,EAAE;MACvCF,UAAU,CAAC;QACTC,KAAK,EAAE,MAAM;QACbC,eAAe,EAAE;MACnB,CAAC,CAAC;IACJ,CAAC,MAAM;MACLF,UAAU,CAAC;QACTC,KAAK,EAAE,KAAK;QACZC,eAAe,EAAE;MACnB,CAAC,CAAC;IACJ;EACF,CAAC;EACD,MAAME,UAAU,GAAG,CACjB,GAAG,IAAIC,GAAG,CACRC,IAAI,CAACC,GAAG,CAAEC,QAAQ,IAAK;IACrB,OAAOA,QAAQ,CAACC,QAAQ;EAC1B,CAAC,CACH,CAAC,EACD,KAAK,CACN;EAEDC,OAAO,CAACC,GAAG,CAACP,UAAU,CAAC;EAEvB,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,KAAK,CAACC,QAAQ,CAACa,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,KAAK,CAACC,QAAQ,CAACW,UAAU,CAAC;EAC1D,MAAMY,UAAU,GAAIP,QAAQ,IAAK;IAC/B,IAAIA,QAAQ,KAAK,KAAK,EAAE;MACtBI,WAAW,CAACP,IAAI,CAAC;MACjB;IACF;IAEA,MAAMW,WAAW,GAAGX,IAAI,CAACY,MAAM,CAAEC,OAAO,IAAK;MAC3C,OAAOA,OAAO,CAACV,QAAQ,KAAKA,QAAQ;IACtC,CAAC,CAAC;IACFI,WAAW,CAACI,WAAW,CAAC;IAExB,oBACErB,OAAA;MAAKwB,KAAK,EAAErB,OAAQ;MAAAsB,QAAA,gBAClBzB,OAAA;QAAO0B,KAAK,EAAC,QAAQ;QAAAD,QAAA,gBACnBzB,OAAA;UAAO2B,IAAI,EAAC,UAAU;UAACC,OAAO,EAAErB;QAAY;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/ChC,OAAA;UAAM0B,KAAK,EAAC;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,EAAC,GAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIT,CAAC;EAEV,CAAC;AACH,CAAC;AAAC9B,EAAA,CAvDID,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAwDT,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}